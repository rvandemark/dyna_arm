#!/usr/bin/env python

import itertools
import numpy
import time
import rospy
from std_msgs.msg import UInt8

import pypot.dynamixel

ports = pypot.dynamixel.get_available_ports()
print ('available ports:', ports)
if not ports:
	raise IOError('No port available.')

port = ports[0]
print ('Using the first on the list', port)

dxl_io = pypot.dynamixel.DxlIO(port)
print ('Connected!')

found_ids = dxl_io.scan()
print ('Found ids:', found_ids)

if len(found_ids) < 5:
	raise IOError('You should connect at least two motors on the bus for this test.')

ids = found_ids[:5]
print (ids)
print ('Done')


def callback(data):
    print( "I heard %s", data)
    pos={}
    pos[1]=0
    pos[2]=0
    pos[3]=0
    pos[4]=data
    pos[5]=0
    

    #
    #   Enable servos and set the speed 
    #
    dxl_io.enable_torque(ids)
    speed = dict(zip(ids, itertools.repeat(100)))
    dxl_io.set_moving_speed(speed)
    # 
    # Move all of the Servo to the zero position
    # 
    pos =  {1: 0, 2: 0, 3: 0, 4: 0, 5: 60}

    print (type (data.data))
    pos[5]=float(data.data)
    print (pos)
    dxl_io.set_goal_position(pos)

    print (pos)
    print ('Done')

def listener():
    rospy.init_node('listener', anonymous=True)

    rospy.Subscriber("chatter", UInt8, callback)

    # spin() simply keeps python from exiting until this node is stopped
    rospy.spin()


if __name__ == '__main__':

    listener()
